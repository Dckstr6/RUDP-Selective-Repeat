# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'server_ui.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.



import sys
import client
import os
import timeit
import subprocess
from PyQt5 import QtCore, QtGui, QtWidgets  

class Ui_Server(object):
    def setupUi(self, Server):
        Server.setObjectName("Server")
        Server.resize(547, 699)
        Server.setMinimumSize(QtCore.QSize(547, 699))
        Server.setMaximumSize(QtCore.QSize(547, 699))
        self.centralwidget = QtWidgets.QWidget(Server)
        self.centralwidget.setObjectName("centralwidget")
        self.s_ip_lbl = QtWidgets.QLabel(self.centralwidget)
        self.s_ip_lbl.setGeometry(QtCore.QRect(100, 60, 141, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.s_ip_lbl.setFont(font)
        self.s_ip_lbl.setObjectName("s_ip_lbl")
        self.sip_txt = QtWidgets.QLineEdit(self.centralwidget)
        self.sip_txt.setGeometry(QtCore.QRect(320, 70, 113, 22))
        self.sip_txt.setObjectName("sip_txt")
        self.s_pn_lbl = QtWidgets.QLabel(self.centralwidget)
        self.s_pn_lbl.setGeometry(QtCore.QRect(100, 110, 151, 16))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.s_pn_lbl.setFont(font)
        self.s_pn_lbl.setObjectName("s_pn_lbl")
        self.spn_txt = QtWidgets.QLineEdit(self.centralwidget)
        self.spn_txt.setGeometry(QtCore.QRect(320, 110, 113, 22))
        self.spn_txt.setObjectName("spn_txt")
        self.c_ip_lbl = QtWidgets.QLabel(self.centralwidget)
        self.c_ip_lbl.setGeometry(QtCore.QRect(100, 150, 131, 16))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.c_ip_lbl.setFont(font)
        self.c_ip_lbl.setObjectName("c_ip_lbl")
        self.cip_txt = QtWidgets.QLineEdit(self.centralwidget)
        self.cip_txt.setGeometry(QtCore.QRect(320, 150, 113, 22))
        self.cip_txt.setObjectName("cip_txt")
        self.c_pn_lbl = QtWidgets.QLabel(self.centralwidget)
        self.c_pn_lbl.setGeometry(QtCore.QRect(100, 190, 141, 16))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.c_pn_lbl.setFont(font)
        self.c_pn_lbl.setObjectName("c_pn_lbl")
        self.cpn_txt = QtWidgets.QLineEdit(self.centralwidget)
        self.cpn_txt.setGeometry(QtCore.QRect(320, 190, 113, 22))
        self.cpn_txt.setObjectName("cpn_txt")
        self.rtc_lbl = QtWidgets.QLabel(self.centralwidget)
        self.rtc_lbl.setGeometry(QtCore.QRect(100, 230, 171, 16))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.rtc_lbl.setFont(font)
        self.rtc_lbl.setTextFormat(QtCore.Qt.AutoText)
        self.rtc_lbl.setObjectName("rtc_lbl")
        self.gt_lbl = QtWidgets.QLabel(self.centralwidget)
        self.gt_lbl.setGeometry(QtCore.QRect(100, 270, 131, 16))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.gt_lbl.setFont(font)
        self.gt_lbl.setObjectName("gt_lbl")
        self.window_size = QtWidgets.QLabel(self.centralwidget)
        self.window_size.setGeometry(QtCore.QRect(100, 390, 171, 16))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.window_size.setFont(font)
        self.window_size.setObjectName("window_size")
        self.pktsize_lbl = QtWidgets.QLabel(self.centralwidget)
        self.pktsize_lbl.setGeometry(QtCore.QRect(100, 350, 171, 16))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.pktsize_lbl.setFont(font)
        self.pktsize_lbl.setObjectName("pktsize_lbl")
        self.rtt_lbl = QtWidgets.QLabel(self.centralwidget)
        self.rtt_lbl.setGeometry(QtCore.QRect(100, 310, 181, 16))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.rtt_lbl.setFont(font)
        self.rtt_lbl.setObjectName("rtt_lbl")
        self.rtc_txt = QtWidgets.QLineEdit(self.centralwidget)
        self.rtc_txt.setGeometry(QtCore.QRect(320, 230, 113, 22))
        self.rtc_txt.setObjectName("rtc_txt")
        self.gt_txt = QtWidgets.QLineEdit(self.centralwidget)
        self.gt_txt.setGeometry(QtCore.QRect(320, 270, 113, 22))
        self.gt_txt.setObjectName("gt_txt")
        self.rtt_txt = QtWidgets.QLineEdit(self.centralwidget)
        self.rtt_txt.setGeometry(QtCore.QRect(320, 310, 113, 22))
        self.rtt_txt.setObjectName("rtt_txt")
        self.pktsize_txt = QtWidgets.QLineEdit(self.centralwidget)
        self.pktsize_txt.setGeometry(QtCore.QRect(320, 350, 113, 22))
        self.pktsize_txt.setObjectName("pktsize_txt")
        self.winsize_txt = QtWidgets.QLineEdit(self.centralwidget)
        self.winsize_txt.setGeometry(QtCore.QRect(320, 390, 113, 22))
        self.winsize_txt.setObjectName("winsize_txt")
        self.s_status = QtWidgets.QTextBrowser(self.centralwidget)
        self.s_status.setGeometry(QtCore.QRect(110, 530, 321, 101))
        self.s_status.setObjectName("s_status")
        self.sbtn = QtWidgets.QPushButton(self.centralwidget)
        self.sbtn.setGeometry(QtCore.QRect(200, 470, 171, 28))
        self.sbtn.setObjectName("sbtn")
        self.sbtn.clicked.connect(self.button_clicked)
        self.buffer_siz_txt = QtWidgets.QLineEdit(self.centralwidget)
        self.buffer_siz_txt.setGeometry(QtCore.QRect(320, 430, 113, 22))
        self.buffer_siz_txt.setObjectName("buffer_siz_txt")
        self.buffer_size_lbl = QtWidgets.QLabel(self.centralwidget)
        self.buffer_size_lbl.setGeometry(QtCore.QRect(100, 430, 171, 16))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.buffer_size_lbl.setFont(font)
        self.buffer_size_lbl.setObjectName("buffer_size_lbl")
        Server.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(Server)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 547, 22))
        self.menubar.setObjectName("menubar")
        Server.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(Server)
        self.statusbar.setObjectName("statusbar")
        Server.setStatusBar(self.statusbar)

        self.retranslateUi(Server)
        QtCore.QMetaObject.connectSlotsByName(Server)

    def retranslateUi(self, Server):
        _translate = QtCore.QCoreApplication.translate
        Server.setWindowTitle(_translate("Server", "Server"))
        self.s_ip_lbl.setStatusTip(_translate("Server", "Your IP Address"))
        self.s_ip_lbl.setText(_translate("Server", "Server IP Address"))
        self.s_pn_lbl.setStatusTip(_translate("Server", "Your IP Address"))
        self.s_pn_lbl.setText(_translate("Server", "Server Port Number"))
        self.c_ip_lbl.setStatusTip(_translate("Server", "Target IP Address"))
        self.c_ip_lbl.setText(_translate("Server", "Client IP Address"))
        self.c_pn_lbl.setText(_translate("Server", "Client Port Number"))
        self.rtc_lbl.setStatusTip(_translate("Server", "Default set to 5"))
        self.rtc_lbl.setText(_translate("Server", "Re-Transmission Count   (5)"))
        self.gt_lbl.setStatusTip(_translate("Server", "Server sleep time, default set to 30 secs"))
        self.gt_lbl.setText(_translate("Server", "Global Timer   (30s)"))
        self.window_size.setStatusTip(_translate("Server", "Server Side Window size, default set to 3"))
        self.window_size.setText(_translate("Server", "Window Size     (default 3)"))
        self.pktsize_lbl.setStatusTip(_translate("Server", "Size of Packets, default set to 10024"))
        self.pktsize_lbl.setText(_translate("Server", "Packet Size  (default 10024)"))
        self.rtt_lbl.setStatusTip(_translate("Server", "Default set to 3 secs"))
        self.rtt_lbl.setText(_translate("Server", "Re-Transmission Timer (3s)"))
        self.winsize_txt.setStatusTip(_translate("Server", "Server side window size, default set to 3"))
        self.sbtn.setStatusTip(_translate("Server", "Start Server"))
        self.sbtn.setText(_translate("Server", "Start Server"))
        self.buffer_siz_txt.setStatusTip(_translate("Server", "Server side window size, default set to 3"))
        self.buffer_size_lbl.setStatusTip(_translate("Server", "Server Side Window size, default set to 3"))
        self.buffer_size_lbl.setText(_translate("Server", "Buffer Size (defualt 20)"))

    def button_clicked(self):
        self.s_status.clear()
        server_ip = self.sip_txt.text()
        client_ip = self.cip_txt.text()
        server_port = self.spn_txt.text()
        client_port = self.cpn_txt.text()
        rtc = self.rtt_txt.text()
        global_timer = self.gt_txt.text()
        packet_size = self.pktsize_txt.text()
        window_size = self.winsize_txt.text()
        rtt = self.rtt_txt.text()
        buffer_size = self.buffer_siz_txt.text()

        if(not (server_ip and server_ip.strip())):
            self.s_status.append("Please enter Server IP Address")
            return 

        if(not (client_ip and client_ip.strip())):
            self.s_status.append("Please enter Server IP Address")
            return

        if(not (server_port and server_port.strip())):
            self.s_status.append("Please assign a Port Number for Server")
            return

        if(not (client_port and client_port.strip())):
            self.s_status.append("Please assign a Port Number for Client")
            return


        if(not (buffer_size and buffer_size.strip())):
            buffer_size = "20"
        if(not (rtc and rtc.strip())):
            rtc = "5"
        if(not (rtt and rtt.strip())):
            rtt = "3"
        if(not (window_size and window_size.strip())):
            window_size = "3"
        if(not (packet_size and packet_size.strip())):
            packet_size = "10024"
        if(not (global_timer and global_timer.strip())):
            global_timer = "30"

        self.s_status.append("Server is online!")
        start = timeit.default_timer()
        args = ['python3', 'server.py' , server_ip , server_port , client_ip , client_port , rtc, window_size, rtt, global_timer, packet_size,buffer_size ]
        # args = ['python3', 'server.py' , "127.0.0.1" , "50125" , "127.0.0.1" , "50126" , "5","3","3","30","10024","20"]
        s = subprocess.run(args)
        end  = timeit.default_timer()
        duration = end - start
        duration  = round(duration,3)
        return_code = s.returncode
        print(f"exit is the {return_code}")
        if(return_code == 0):
            self.s_status.append(f"File Sent Successfully\nTime Elapsed: {duration} s")
        elif(return_code == 1):
            self.s_status.append("Retransmission Timeout\nTime Elapsed: {duration} s")
        elif(return_code == 2):
            self.s_status.append("Retransmission Limit Exceeded\nTime Elapsed: {duration} s")





if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Server = QtWidgets.QMainWindow()
    ui = Ui_Server()
    ui.setupUi(Server)
    Server.show()
    sys.exit(app.exec_())
